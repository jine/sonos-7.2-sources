--- a/src/libmpg123/parse.c	2015-08-11 22:34:05.000000000 -0700
+++ b/src/libmpg123/parse.c	2015-11-28 22:13:18.279942915 -0800
@@ -911,12 +911,14 @@
 	return bpf;
 }
 
+#ifndef SONOS_MPG123_OPTIMIZED
 int attribute_align_arg mpg123_spf(mpg123_handle *mh)
 {
 	if(mh == NULL) return MPG123_ERR;
 
 	return mh->firsthead ? mh->spf : MPG123_ERR;
 }
+#endif // SONOS_MPG123_OPTIMIZED
 
 double attribute_align_arg mpg123_tpf(mpg123_handle *fr)
 {
@@ -929,6 +931,7 @@
 	return tpf;
 }
 
+#ifndef SONOS_MPG123_OPTIMIZED
 int attribute_align_arg mpg123_position(mpg123_handle *fr, off_t no, off_t buffsize,
 	off_t  *current_frame,   off_t  *frames_left,
 	double *current_seconds, double *seconds_left)
@@ -1007,10 +1010,15 @@
 	tpf = mpg123_tpf(fr);
 	return (int) (no*tpf);
 }
+#endif // SONOS_MPG123_OPTIMIZED
 
 /* first attempt of read ahead check to find the real first header; cannot believe what junk is out there! */
 static int do_readahead(mpg123_handle *fr, unsigned long newhead)
 {
+#ifdef SONOS_MPG123_OPTIMIZED
+        // No need to read ahead since we already validate all headers before sending to MPG123
+	return PARSE_GOOD;
+#else
 	unsigned long nexthead = 0;
 	int hd = 0;
 	off_t start, oret;
@@ -1062,6 +1070,7 @@
 		return PARSE_AGAIN;
 	}
 	else return PARSE_GOOD;
+#endif // SONOS_MPG123_OPTIMIZED
 }
 
 static int handle_id3v2(mpg123_handle *fr, unsigned long newhead)
